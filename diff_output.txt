diff --git a/diff_output.txt b/diff_output.txt
index 68960e0..e69de29 100644
--- a/diff_output.txt
+++ b/diff_output.txt
@@ -1,1457 +0,0 @@
-diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
-index 1a4691d..5705786 100644
---- a/android/app/src/main/AndroidManifest.xml
-+++ b/android/app/src/main/AndroidManifest.xml
-@@ -1,4 +1,10 @@
- <manifest xmlns:android="http://schemas.android.com/apk/res/android">
-+    <uses-permission android:name="android.permission.INTERNET" />
-+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
-+    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
-+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-+    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
-     
-     <application
-         android:label="Employee Attendance"
-diff --git a/lib/app/app.dart b/lib/app/app.dart
-deleted file mode 100644
-index aac1561..0000000
---- a/lib/app/app.dart
-+++ /dev/null
-@@ -1,16 +0,0 @@
--import 'package:employee_attendance/presentation/widgets/auth_wrapper.dart';
--import 'package:flutter/material.dart';
--import 'package:get/get.dart';
--
--class MyApp extends StatelessWidget {
--  const MyApp({super.key});
--
--  @override
--  Widget build(BuildContext context) {
--    return GetMaterialApp(
--      title: 'Employee Attendance App',
--      theme: ThemeData(primarySwatch: Colors.blue),
--      home: const AuthWrapper(),
--    );
--  }
--}
-diff --git a/lib/controller/attendance_controller.dart b/lib/controller/attendance_controller.dart
-deleted file mode 100644
-index 9b097cf..0000000
---- a/lib/controller/attendance_controller.dart
-+++ /dev/null
-@@ -1,75 +0,0 @@
--import 'package:employee_attendance/core/utility/network_util.dart';
--import 'package:get/get.dart';
--import '../../domain/repositories/attendance_repository.dart';
--import '../../data/repositories/firebase_attendance_repository.dart';
--
--class AttendanceController extends GetxController {
--  final AttendanceRepository _attendanceRepository =
--      FirebaseAttendanceRepository();
--  final NetworkUtil _networkUtil = NetworkUtil();
--
--  final _status = 'Not checked in'.obs;
--  String get status => _status.value;
--
--  final _canCheckIn = true.obs;
--  bool get canCheckIn => _canCheckIn.value;
--
--  final _canCheckOut = false.obs;
--  bool get canCheckOut => _canCheckOut.value;
--
--  @override
--  void onInit() {
--    super.onInit();
--    _checkTodayAttendance();
--  }
--
--  void _checkTodayAttendance() async {
--    const userId = 'current_user_id'; // Replace with actual user ID
--    final attendance = await _attendanceRepository.getTodayAttendance(userId);
--    if (attendance != null) {
--      if (attendance.checkOutTime == null) {
--        _canCheckIn.value = false;
--        _canCheckOut.value = true;
--        _status.value = 'Checked in';
--      } else {
--        _canCheckIn.value = false;
--        _canCheckOut.value = false;
--        _status.value = 'Checked out for today';
--      }
--    }
--  }
--
--  void checkIn() async {
--    bool isConnectedToOfficeWifi = await _networkUtil.isConnectedToOfficeWifi();
--    if (!isConnectedToOfficeWifi) {
--      Get.snackbar(
--          'Error', 'You must be connected to the office WiFi to check in',
--          snackPosition: SnackPosition.BOTTOM);
--      return;
--    }
--
--    const userId = 'current_user_id'; // Replace with actual user ID
--    try {
--      await _attendanceRepository.checkIn(userId);
--      _status.value = 'Checked in';
--      _canCheckIn.value = false;
--      _canCheckOut.value = true;
--    } catch (e) {
--      Get.snackbar('Error', 'Failed to check in',
--          snackPosition: SnackPosition.BOTTOM);
--    }
--  }
--
--  void checkOut() async {
--    const userId = 'current_user_id'; // Replace with actual user ID
--    try {
--      await _attendanceRepository.checkOut(userId);
--      _status.value = 'Checked out';
--      _canCheckIn.value = false;
--      _canCheckOut.value = false;
--    } catch (e) {
--      Get.snackbar('Error', 'Failed to check out',
--          snackPosition: SnackPosition.BOTTOM);
--    }
--  }
--}
-diff --git a/lib/controller/auth_controller.dart b/lib/controller/auth_controller.dart
-deleted file mode 100644
-index 0eefb55..0000000
---- a/lib/controller/auth_controller.dart
-+++ /dev/null
-@@ -1,35 +0,0 @@
--import 'package:flutter/material.dart';
--import 'package:get/get.dart';
--import '../../domain/repositories/auth_repository.dart';
--import '../../data/repositories/firebase_auth_repository.dart';
--
--class AuthController extends GetxController {
--  final AuthRepository _authRepository = FirebaseAuthRepository();
--  final TextEditingController emailController = TextEditingController();
--  final TextEditingController passwordController = TextEditingController();
--
--  void login() async {
--    try {
--      await _authRepository.signIn(
--        emailController.text.trim(),
--        passwordController.text,
--      );
--    } catch (e) {
--      Get.snackbar('Error', _getErrorMessage(e.toString()),
--          snackPosition: SnackPosition.BOTTOM);
--    }
--  }
--
--  String _getErrorMessage(String errorCode) {
--    switch (errorCode) {
--      case 'user-not-found':
--        return 'No user found for that email.';
--      case 'wrong-password':
--        return 'Wrong password provided.';
--      case 'invalid-email':
--        return 'The email address is badly formatted.';
--      default:
--        return 'An error occurred. Please try again.';
--    }
--  }
--}
-diff --git a/lib/core/base/base_use_case.dart b/lib/core/base/base_use_case.dart
-index 666b07b..9849770 100644
---- a/lib/core/base/base_use_case.dart
-+++ b/lib/core/base/base_use_case.dart
-@@ -1,124 +1,127 @@
--// import 'dart:async';
-+import 'dart:async';
- 
--// import 'package:flutter/cupertino.dart';
--// import 'package:fpdart/fpdart.dart';
-+import 'package:employee_attendance/core/utility/logger_utility.dart';
-+import 'package:employee_attendance/domain/service/error_message_handler.dart';
-+import 'package:flutter/cupertino.dart';
-+import 'package:fpdart/fpdart.dart';
- 
-+/// The BaseUseCase class serves as a base for all use cases in the application.
-+///
-+/// The purpose of this class is to provide a common structure for all use cases,
-+/// making it easier to implement and maintain. The class provides a method
-+/// mapResultToEither that can be used to map the result of a function to either
-+/// a success value or an error string, making error handling more consistent across
-+/// the application.
-+///
-+/// The BaseUseCase class also takes an instance of ErrorMessageHandler in its
-+/// constructor, which can be used to generate error messages in a consistent way.
-+abstract class BaseUseCase<T> {
-+  BaseUseCase(this._errorMessageHandler);
- 
--// /// The BaseUseCase class serves as a base for all use cases in the application.
--// ///
--// /// The purpose of this class is to provide a common structure for all use cases,
--// /// making it easier to implement and maintain. The class provides a method
--// /// mapResultToEither that can be used to map the result of a function to either
--// /// a success value or an error string, making error handling more consistent across
--// /// the application.
--// ///
--// /// The BaseUseCase class also takes an instance of ErrorMessageHandler in its
--// /// constructor, which can be used to generate error messages in a consistent way.
--// abstract class BaseUseCase<T> {
--//   BaseUseCase(this._errorMessageHandler);
-+  final ErrorMessageHandler _errorMessageHandler;
- 
--//   final ErrorMessageHandler _errorMessageHandler;
-+  /// Used to map the result of a function to either a success value or an error
-+  /// string.
-+  ///
-+  /// Example usage:
-+  ///
-+  /// ```dart
-+  /// Future<Either<String, T>> result = mapResultToEither(() async {
-+  ///     T value = await fetchData();
-+  ///     return value;
-+  /// });
-+  ///
-+  /// ```
-+  ///
-+  /// The function passed to `mapResultToEither` should return either a success
-+  /// value of type `T` or an error object.
-+  ///
-+  /// In case of success, the function will return a `Right` value with the success value.
-+  ///
-+  /// In case of error, the function will log the error, generate an error
-+  /// message using `_errorMessageHandler`, and return a `Left` value with the
-+  /// error message.
-+  @protected
-+  Future<Either<String, T>> mapResultToEither(
-+    FutureOr<T> Function() function,
-+  ) async {
-+    try {
-+      final T result = await function();
-+      return right(result);
-+    } catch (error, stack) {
-+      logError(error);
-+      logError(stack);
-+      final String errorMessage =
-+          _errorMessageHandler.generateErrorMessage(error);
-+      return left(errorMessage);
-+    }
-+  }
- 
--//   /// Used to map the result of a function to either a success value or an error
--//   /// string.
--//   ///
--//   /// Example usage:
--//   ///
--//   /// ```dart
--//   /// Future<Either<String, T>> result = mapResultToEither(() async {
--//   ///     T value = await fetchData();
--//   ///     return value;
--//   /// });
--//   ///
--//   /// ```
--//   ///
--//   /// The function passed to `mapResultToEither` should return either a success
--//   /// value of type `T` or an error object.
--//   ///
--//   /// In case of success, the function will return a `Right` value with the success value.
--//   ///
--//   /// In case of error, the function will log the error, generate an error
--//   /// message using `_errorMessageHandler`, and return a `Left` value with the
--//   /// error message.
--//   @protected
--//   Future<Either<String, T>> mapResultToEither(
--//     FutureOr<T> Function() function,
--//   ) async {
--//     try {
--//       final T result = await function();
--//       return right(result);
--//     } catch (error, stack) {
--//       logError(error);
--//       logError(stack);
--//       final String errorMessage = _errorMessageHandler.generateErrorMessage(error);
--//       return left(errorMessage);
--//     }
--//   }
-+  /// Retrieves the right value from the result of a given function.
-+  ///
-+  /// This function executes the provided [function] and maps its result to an `Either` object.
-+  /// It then retrieves the right value from the `Either` object and returns it.
-+  /// If the right value is not present, it returns the [defaultValue] instead.
-+  ///
-+  /// Use Case:
-+  /// This function is useful when you have a function that can return different types of values or errors.
-+  /// By using `Either`, you can handle both successful results and error cases in a unified way.
-+  /// The `getRight` function simplifies the process of extracting the successful result when working with `Either`.
-+  ///
-+  /// Rationale:
-+  /// The `getRight` function abstracts the process of handling different result types and provides a more intuitive
-+  /// way to retrieve the successful value. By using `Either`, you can explicitly represent success and failure cases,
-+  /// making your code more robust and easier to reason about.
-+  ///
-+  /// Example:
-+  /// ```dart
-+  /// Future<Either<Error, int>> fetchData() async {
-+  ///   // Simulating an asynchronous operation that can fail or return a value
-+  ///   final result = await someAsyncOperation();
-+  ///
-+  ///   if (result.hasError) {
-+  ///     return left(Error('Failed to fetch data'));
-+  ///   } else {
-+  ///     return right(result.data);
-+  ///   }
-+  /// }
-+  ///
-+  /// Future<void> processResult() async {
-+  ///   final int data = await getRight(() => fetchData(), defaultValue: 0);
-+  ///   // Use the retrieved data or fallback to the default value if it's not available
-+  ///   print('Data: $data');
-+  /// }
-+  /// ```
-+  ///
-+  /// In the above example, the `fetchData` function returns an `Either` object representing either an error or the fetched data.
- 
--//   /// Retrieves the right value from the result of a given function.
--//   ///
--//   /// This function executes the provided [function] and maps its result to an `Either` object.
--//   /// It then retrieves the right value from the `Either` object and returns it.
--//   /// If the right value is not present, it returns the [defaultValue] instead.
--//   ///
--//   /// Use Case:
--//   /// This function is useful when you have a function that can return different types of values or errors.
--//   /// By using `Either`, you can handle both successful results and error cases in a unified way.
--//   /// The `getRight` function simplifies the process of extracting the successful result when working with `Either`.
--//   ///
--//   /// Rationale:
--//   /// The `getRight` function abstracts the process of handling different result types and provides a more intuitive
--//   /// way to retrieve the successful value. By using `Either`, you can explicitly represent success and failure cases,
--//   /// making your code more robust and easier to reason about.
--//   ///
--//   /// Example:
--//   /// ```dart
--//   /// Future<Either<Error, int>> fetchData() async {
--//   ///   // Simulating an asynchronous operation that can fail or return a value
--//   ///   final result = await someAsyncOperation();
--//   ///
--//   ///   if (result.hasError) {
--//   ///     return left(Error('Failed to fetch data'));
--//   ///   } else {
--//   ///     return right(result.data);
--//   ///   }
--//   /// }
--//   ///
--//   /// Future<void> processResult() async {
--//   ///   final int data = await getRight(() => fetchData(), defaultValue: 0);
--//   ///   // Use the retrieved data or fallback to the default value if it's not available
--//   ///   print('Data: $data');
--//   /// }
--//   /// ```
--//   ///
--//   /// In the above example, the `fetchData` function returns an `Either` object representing either an error or the fetched data.
--  
--  
--//   /// The `getRight` function is used to extract the successful data from the `fetchData` result.
--//   /// This provides a convenient way to handle the result and proceed with further processing.
--//   @protected
--//   Future<T> getRight(FutureOr<T> Function() function) async {
--//     final Either<String, T> result = await mapResultToEither(() => function());
--//     return result.getRight().getOrElse(() => throw Exception('No successful result available'));
--//   }
-+  /// The `getRight` function is used to extract the successful data from the `fetchData` result.
-+  /// This provides a convenient way to handle the result and proceed with further processing.
-+  @protected
-+  Future<T> getRight(FutureOr<T> Function() function) async {
-+    final Either<String, T> result = await mapResultToEither(() => function());
-+    return result
-+        .getRight()
-+        .getOrElse(() => throw Exception('No successful result available'));
-+  }
- 
--//   /// Executes the provided function `function` and discards the result.
--//   ///
--//   ///
--//   /// Example usage:
--//   ///
--//   /// ```dart
--//   /// await doVoid(() async {
--//   ///   // Perform some asynchronous operation
--//   /// });
--//   /// ```
--//   ///
--//   /// Note: This function is intended for cases where you want to execute an
--//   /// asynchronous operation but don't require the result or error handling
--//   /// externally. If you need to handle the result or errors, consider using
--//   /// `mapResultToEither` or `getRight` functions instead.
--//   @protected
--//   Future<void> doVoid(FutureOr<T> Function() function) async {
--//     await mapResultToEither(() => function());
--//   }
--// }
-+  /// Executes the provided function `function` and discards the result.
-+  ///
-+  ///
-+  /// Example usage:
-+  ///
-+  /// ```dart
-+  /// await doVoid(() async {
-+  ///   // Perform some asynchronous operation
-+  /// });
-+  /// ```
-+  ///
-+  /// Note: This function is intended for cases where you want to execute an
-+  /// asynchronous operation but don't require the result or error handling
-+  /// externally. If you need to handle the result or errors, consider using
-+  /// `mapResultToEither` or `getRight` functions instead.
-+  @protected
-+  Future<void> doVoid(FutureOr<T> Function() function) async {
-+    await mapResultToEither(() => function());
-+  }
-+}
-diff --git a/lib/core/bindings/allbindings.dart b/lib/core/bindings/allbindings.dart
-deleted file mode 100644
-index bb94f5c..0000000
---- a/lib/core/bindings/allbindings.dart
-+++ /dev/null
-@@ -1,10 +0,0 @@
--import 'package:get/get.dart';
--
--class AllBindings extends Bindings {
--  @override
--  void dependencies() {
--    // Get.lazyPut(() => AuthController());
--    // Get.lazyPut(() => SellerService());
--    // Get.lazyPut(() => BuyerService());
--  }
--}
-diff --git a/lib/core/bindings/base.dart b/lib/core/bindings/base.dart
-deleted file mode 100644
-index 541c68e..0000000
---- a/lib/core/bindings/base.dart
-+++ /dev/null
-@@ -1,7 +0,0 @@
--// import 'package:get/get.dart';
--
--// class Base {
--//   // static final authC = Get.find<AuthController>();
--//   // static final sellerC = Get.find<SellerService>();
--//   // static final buyerC = Get.find<BuyerService>();
--// }
-diff --git a/lib/core/config/employee_attendance_app_color.dart b/lib/core/config/employee_attendance_app_color.dart
-index 2bb60b3..a9cdf63 100644
---- a/lib/core/config/employee_attendance_app_color.dart
-+++ b/lib/core/config/employee_attendance_app_color.dart
-@@ -1,10 +1,10 @@
- import 'package:flutter/material.dart';
- 
- class EmployeeAttendanceAppColor {
--  static const Color scaffoldBachgroundColor = Color(0xFFFDFAF3);
--  static const Color primaryColor = Color(0xFF614730);
-+  static const Color scaffoldBachgroundColor = Color(0xFFF8F8F9);
-+  static const Color primaryColor = Color(0xFF1b5b40);
-   static const Color textColor = Color(0xFF101010);
-   static const Color cardColor = Color(0xFFF4EDE3);
--  static const Color secondaryColor = Color(0xFFFBECD6);
--  static const Color appbarColor = Color(0xff795B41);
-+  static const Color secondaryColor = Color(0xFFcbac6b);
-+  static const Color appbarColor = Color(0xFF1b5b40);
- }
-diff --git a/lib/core/config/themes.dart b/lib/core/config/themes.dart
-index c3a4612..e35010e 100644
---- a/lib/core/config/themes.dart
-+++ b/lib/core/config/themes.dart
-@@ -2,6 +2,7 @@ import 'dart:async';
- 
- import 'package:employee_attendance/core/config/employee_attendance_app_color.dart';
- import 'package:employee_attendance/core/static/constants.dart';
-+import 'package:employee_attendance/core/static/font_family.dart';
- import 'package:employee_attendance/core/utility/logger_utility.dart';
- import 'package:employee_attendance/presentation/employee_attendance.dart';
- import 'package:flutter/material.dart';
-@@ -11,7 +12,7 @@ class EmployeeAttendanceTheme {
-   EmployeeAttendanceTheme._();
- 
-   static ThemeData lightTheme = ThemeData(
--      // fontFamily: FontFamily.inter,
-+      fontFamily: FontFamily.inter,
-       scaffoldBackgroundColor:
-           EmployeeAttendanceAppColor.scaffoldBachgroundColor,
-       cardColor: EmployeeAttendanceAppColor.cardColor,
-@@ -28,13 +29,14 @@ class EmployeeAttendanceTheme {
-       appBarTheme: const AppBarTheme(
-           backgroundColor: EmployeeAttendanceAppColor.appbarColor,
-           iconTheme: IconThemeData(color: Colors.white),
-+          elevation: 0,
-           scrolledUnderElevation: 0,
-           titleTextStyle: TextStyle(
-               fontWeight: FontWeight.bold, fontSize: 20, color: Colors.white)),
-       textTheme: const TextTheme(
-         bodyMedium: TextStyle(
-           color: EmployeeAttendanceAppColor.textColor,
--          // fontFamily: FontFamily.inter,
-+          fontFamily: FontFamily.inter,
-           height: 1.6,
-         ),
-       )
-diff --git a/lib/core/static/constants.dart b/lib/core/static/constants.dart
-index 7e9abcf..33c5d8c 100644
---- a/lib/core/static/constants.dart
-+++ b/lib/core/static/constants.dart
-@@ -18,7 +18,7 @@ const List<Color> availableColors = [
-   Color(0xff90A4AE),
- ];
- 
--const String packageName = "com.royalcourtbd.smarttutor";
-+const String packageName = "com.royalcourtbd.employee_attendance";
- // const String appStoreAppId = "1324615850";
- 
- const String playStoreUrl =
-diff --git a/lib/core/static/font_family.dart b/lib/core/static/font_family.dart
-index 00e3e01..f2ca68b 100644
---- a/lib/core/static/font_family.dart
-+++ b/lib/core/static/font_family.dart
-@@ -1,6 +1,5 @@
- class FontFamily {
-   FontFamily._();
- 
--  static const String roboto = 'Roboto';
-   static const String inter = 'Inter';
- }
-diff --git a/lib/core/static/svg_path.dart b/lib/core/static/svg_path.dart
-index bcb36a5..7cd8879 100644
---- a/lib/core/static/svg_path.dart
-+++ b/lib/core/static/svg_path.dart
-@@ -1,11 +1,7 @@
- class SvgPath {
-   SvgPath._();
--  static const String icGovtLogo = 'assets/images/png/ic_govt_logo.png';
--  static const String imgAppLogo = 'assets/images/png/app_logo.png';
--  static const String icItJobLogo = 'assets/images/png/it.jpg';
--  static const String imgNoInternet = 'assets/images/png/internet.png';
--  static const String icNotFount = 'assets/images/png/ic_not_found.png';
--  static const String icPrivateJobLogo =
--      'assets/images/png/private_job_logo.jpg';
--  static const String icNotification = 'assets/images/svg/ic_notification.svg';
-+  static const String icTimeIn = 'assets/png/time_in.png';
-+  static const String icTimeOut = 'assets/png/time_out.png';
-+  static const String icTotalHrs = 'assets/png/sand_clock.png';
-+  static const String icTouch = 'assets/png/touch.png';
- }
-diff --git a/lib/core/static/urls.dart b/lib/core/static/urls.dart
-index 7ac73ed..98f88c0 100644
---- a/lib/core/static/urls.dart
-+++ b/lib/core/static/urls.dart
-@@ -1,7 +1,5 @@
- class Urls {
-   Urls._();
--  static const String baseUrl = 'https://api.example.com';
--  static const String allJobs = 'all_jobs';
--  static const String deviceInfo = 'device_info';
--  static const String adsId = 'ads_id';
-+  static const String baseUrl = '';
-+  static const String attendance = 'attendance';
- }
-diff --git a/lib/core/utility/network_util.dart b/lib/core/utility/network_util.dart
-index 93932a4..1520caf 100644
---- a/lib/core/utility/network_util.dart
-+++ b/lib/core/utility/network_util.dart
-@@ -1,3 +1,4 @@
-+import 'package:flutter/material.dart';
- import 'package:network_info_plus/network_info_plus.dart';
- import 'package:permission_handler/permission_handler.dart';
- 
-@@ -9,10 +10,10 @@ class NetworkUtil {
-     if (await _requestLocationPermission()) {
-       try {
-         String? wifiName = await _networkInfo.getWifiName();
--        print('Connected to: $wifiName');
-+        debugPrint('Connected to: $wifiName');
- 
-         if (wifiName == null) {
--          print('Unable to get Wi-Fi name. Check app permissions.');
-+          debugPrint('Unable to get Wi-Fi name. Check app permissions.');
-           return false;
-         }
- 
-@@ -21,11 +22,11 @@ class NetworkUtil {
- 
-         return wifiName == _officeWifiSSID;
-       } catch (e) {
--        print('Error checking Wi-Fi connection: $e');
-+        debugPrint('Error checking Wi-Fi connection: $e');
-         return false;
-       }
-     } else {
--      print('Location permission denied');
-+      debugPrint('Location permission denied');
-       return false;
-     }
-   }
-diff --git a/lib/data/repositories/firebase_attendance_repository.dart b/lib/data/repositories/firebase_attendance_repository.dart
-deleted file mode 100644
-index 5c36842..0000000
---- a/lib/data/repositories/firebase_attendance_repository.dart
-+++ /dev/null
-@@ -1,91 +0,0 @@
--import 'package:cloud_firestore/cloud_firestore.dart';
--import '../../domain/entities/attendance.dart';
--import '../../domain/repositories/attendance_repository.dart';
--
--class FirebaseAttendanceRepository implements AttendanceRepository {
--  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
--
--  @override
--  Future<void> checkIn(String userId) async {
--    final now = DateTime.now();
--    await _firestore.collection('attendance').add({
--      'userId': userId,
--      'checkInTime': now,
--      'isLate': _isLate(now),
--      'checkOutTime': null,
--    });
--  }
--
--  @override
--  Future<void> checkOut(String userId) async {
--    final now = DateTime.now();
--    final snapshot = await _firestore
--        .collection('attendance')
--        .where('userId', isEqualTo: userId)
--        .where('checkOutTime', isNull: true)
--        .limit(1)
--        .get();
--
--    if (snapshot.docs.isNotEmpty) {
--      await snapshot.docs.first.reference.update({
--        'checkOutTime': now,
--      });
--    }
--  }
--
--  @override
--  Future<Attendance?> getTodayAttendance(String userId) async {
--    final today = DateTime.now();
--    final todayStart = DateTime(today.year, today.month, today.day);
--    final todayEnd = todayStart.add(const Duration(days: 1));
--
--    final snapshot = await _firestore
--        .collection('attendance')
--        .where('userId', isEqualTo: userId)
--        .where('checkInTime', isGreaterThanOrEqualTo: todayStart)
--        .where('checkInTime', isLessThan: todayEnd)
--        .limit(1)
--        .get();
--
--    if (snapshot.docs.isNotEmpty) {
--      final doc = snapshot.docs.first;
--      final data = doc.data();
--      return Attendance(
--        id: doc.id,
--        userId: data['userId'],
--        checkInTime: (data['checkInTime'] as Timestamp).toDate(),
--        checkOutTime: data['checkOutTime'] != null
--            ? (data['checkOutTime'] as Timestamp).toDate()
--            : null,
--        isLate: data['isLate'],
--      );
--    }
--    return null;
--  }
--
--  @override
--  Stream<List<Attendance>> getAttendanceHistory(String userId) {
--    return _firestore
--        .collection('attendance')
--        .where('userId', isEqualTo: userId)
--        .orderBy('checkInTime', descending: true)
--        .snapshots()
--        .map((snapshot) => snapshot.docs.map((doc) {
--              final data = doc.data();
--              return Attendance(
--                id: doc.id,
--                userId: data['userId'],
--                checkInTime: (data['checkInTime'] as Timestamp).toDate(),
--                checkOutTime: data['checkOutTime'] != null
--                    ? (data['checkOutTime'] as Timestamp).toDate()
--                    : null,
--                isLate: data['isLate'],
--              );
--            }).toList());
--  }
--
--  bool _isLate(DateTime now) {
--    final startTime = DateTime(now.year, now.month, now.day, 9, 0);
--    return now.isAfter(startTime);
--  }
--}
-diff --git a/lib/data/repositories/firebase_auth_repository.dart b/lib/data/repositories/firebase_auth_repository.dart
-deleted file mode 100644
-index 95c8aca..0000000
---- a/lib/data/repositories/firebase_auth_repository.dart
-+++ /dev/null
-@@ -1,24 +0,0 @@
--import 'package:firebase_auth/firebase_auth.dart';
--import '../../domain/repositories/auth_repository.dart';
--
--class FirebaseAuthRepository implements AuthRepository {
--  final FirebaseAuth _firebaseAuth = FirebaseAuth.instance;
--
--  @override
--  Future<void> signIn(String email, String password) async {
--    await _firebaseAuth.signInWithEmailAndPassword(
--      email: email,
--      password: password,
--    );
--  }
--
--  @override
--  Future<void> signOut() async {
--    await _firebaseAuth.signOut();
--  }
--
--  @override
--  Stream<bool> get authStateChanges {
--    return _firebaseAuth.authStateChanges().map((user) => user != null);
--  }
--}
-diff --git a/lib/domain/entities/attendance.dart b/lib/domain/entities/attendance.dart
-deleted file mode 100644
-index ca43f60..0000000
---- a/lib/domain/entities/attendance.dart
-+++ /dev/null
-@@ -1,15 +0,0 @@
--class Attendance {
--  final String id;
--  final String userId;
--  final DateTime checkInTime;
--  final DateTime? checkOutTime;
--  final bool isLate;
--
--  Attendance({
--    required this.id,
--    required this.userId,
--    required this.checkInTime,
--    this.checkOutTime,
--    required this.isLate,
--  });
--}
-diff --git a/lib/domain/repositories/attendance_repository.dart b/lib/domain/repositories/attendance_repository.dart
-deleted file mode 100644
-index 4f987a1..0000000
---- a/lib/domain/repositories/attendance_repository.dart
-+++ /dev/null
-@@ -1,8 +0,0 @@
--import '../entities/attendance.dart';
--
--abstract class AttendanceRepository {
--  Future<void> checkIn(String userId);
--  Future<void> checkOut(String userId);
--  Future<Attendance?> getTodayAttendance(String userId);
--  Stream<List<Attendance>> getAttendanceHistory(String userId);
--}
-diff --git a/lib/domain/repositories/auth_repository.dart b/lib/domain/repositories/auth_repository.dart
-deleted file mode 100644
-index ff1ce75..0000000
---- a/lib/domain/repositories/auth_repository.dart
-+++ /dev/null
-@@ -1,5 +0,0 @@
--abstract class AuthRepository {
--  Future<void> signIn(String email, String password);
--  Future<void> signOut();
--  Stream<bool> get authStateChanges;
--}
-diff --git a/lib/main.dart b/lib/main.dart
-index 2e78635..7f7e286 100644
---- a/lib/main.dart
-+++ b/lib/main.dart
-@@ -1,12 +1,13 @@
--import 'package:employee_attendance/app/app.dart';
--import 'package:employee_attendance/firebase_options.dart';
--import 'package:firebase_core/firebase_core.dart';
--import 'package:flutter/material.dart';
-+import 'package:employee_attendance/core/di/service_locator.dart';
-+import 'package:employee_attendance/presentation/employee_attendance.dart';
-+import 'package:flutter_neumorphic_plus/flutter_neumorphic.dart';
- 
- void main() async {
-   WidgetsFlutterBinding.ensureInitialized();
--  await Firebase.initializeApp(
--    options: DefaultFirebaseOptions.currentPlatform,
--  );
--  runApp(const MyApp());
-+  await _init();
-+  runApp(const EmployeeAttendance());
-+}
-+
-+Future<void> _init() async {
-+  await ServiceLocator.setup();
- }
-diff --git a/lib/presentation/employee_attendance.dart b/lib/presentation/employee_attendance.dart
-index 16a4e94..79d4c1c 100644
---- a/lib/presentation/employee_attendance.dart
-+++ b/lib/presentation/employee_attendance.dart
-@@ -1,24 +1,23 @@
--import 'package:employee_attendance/core/bindings/allbindings.dart';
- import 'package:employee_attendance/core/config/themes.dart';
--
--import 'package:employee_attendance/presentation/home/ui/home_page.dart';
-+import 'package:employee_attendance/presentation/main/ui/main_page.dart';
- import 'package:flutter/material.dart';
- import 'package:get/get.dart';
- 
- class EmployeeAttendance extends StatelessWidget {
-   const EmployeeAttendance({super.key});
-+
-   static final GlobalKey _globalKey = GlobalKey();
-+
-   static BuildContext get globalContext =>
-       Get.context ?? _globalKey.currentContext!;
- 
-   @override
-   Widget build(BuildContext context) {
-     return GetMaterialApp(
--      initialBinding: AllBindings(),
-       debugShowCheckedModeBanner: false,
-       theme: EmployeeAttendanceTheme.lightTheme,
-       title: 'Employee Attendance',
--      home: HomePage(),
-+      home: MainPage(),
-     );
-   }
- }
-diff --git a/lib/presentation/home/presenter/home_page_ui_state.dart b/lib/presentation/home/presenter/home_page_ui_state.dart
-index e85a601..e22c496 100644
---- a/lib/presentation/home/presenter/home_page_ui_state.dart
-+++ b/lib/presentation/home/presenter/home_page_ui_state.dart
-@@ -4,32 +4,24 @@ class HomePageUiState extends BaseUiState {
-   const HomePageUiState({
-     required super.isLoading,
-     required super.userMessage,
--    required this.status,
--    required this.canCheckIn,
--    required this.canCheckOut,
-+    required this.nowTimeIsIt,
-   });
- 
-   factory HomePageUiState.empty() {
--    return const HomePageUiState(
-+    return HomePageUiState(
-       isLoading: false,
-       userMessage: '',
--      status: '',
--      canCheckIn: false,
--      canCheckOut: false,
-+      nowTimeIsIt: DateTime.now(),
-     );
-   }
- 
--  final String status;
--  final bool canCheckIn;
--  final bool canCheckOut;
-+  final DateTime nowTimeIsIt;
- 
-   @override
-   List<Object?> get props => [
-         isLoading,
-         userMessage,
--        status,
--        canCheckIn,
--        canCheckOut,
-+        nowTimeIsIt,
-       ];
- 
-   HomePageUiState copyWith({
-@@ -38,13 +30,12 @@ class HomePageUiState extends BaseUiState {
-     String? status,
-     bool? canCheckIn,
-     bool? canCheckOut,
-+    DateTime? nowTimeIsIt,
-   }) {
-     return HomePageUiState(
-       isLoading: isLoading ?? super.isLoading,
-       userMessage: message ?? super.userMessage,
--      status: status ?? this.status,
--      canCheckIn: canCheckIn ?? this.canCheckIn,
--      canCheckOut: canCheckOut ?? this.canCheckOut,
-+      nowTimeIsIt: nowTimeIsIt ?? this.nowTimeIsIt,
-     );
-   }
- }
-diff --git a/lib/presentation/home/presenter/home_presenter.dart b/lib/presentation/home/presenter/home_presenter.dart
-index 0cdff86..5aab30c 100644
---- a/lib/presentation/home/presenter/home_presenter.dart
-+++ b/lib/presentation/home/presenter/home_presenter.dart
-@@ -1,3 +1,5 @@
-+import 'dart:async';
-+
- import 'package:employee_attendance/core/base/base_presenter.dart';
- import 'package:employee_attendance/presentation/home/presenter/home_page_ui_state.dart';
- 
-@@ -5,6 +7,30 @@ class HomePresenter extends BasePresenter<HomePageUiState> {
-   final Obs<HomePageUiState> uiState = Obs(HomePageUiState.empty());
-   HomePageUiState get currentUiState => uiState.value;
- 
-+  Timer? _timer;
-+
-+  @override
-+  void onInit() {
-+    super.onInit();
-+    startClock();
-+  }
-+
-+  @override
-+  void onClose() {
-+    _timer?.cancel();
-+    super.onClose();
-+  }
-+
-+  void startClock() {
-+    _timer = Timer.periodic(const Duration(seconds: 1), (timer) {
-+      updateCurrentTime();
-+    });
-+  }
-+
-+  void updateCurrentTime() {
-+    uiState.value = currentUiState.copyWith(nowTimeIsIt: DateTime.now());
-+  }
-+
-   @override
-   Future<void> addUserMessage(String message) async {
-     uiState.value = currentUiState.copyWith(message: message);
-diff --git a/lib/presentation/home/ui/home_page.dart b/lib/presentation/home/ui/home_page.dart
-index 18d9d8f..6b06bbd 100644
---- a/lib/presentation/home/ui/home_page.dart
-+++ b/lib/presentation/home/ui/home_page.dart
-@@ -1,43 +1,101 @@
-+import 'package:employee_attendance/core/config/employee_attendance_screen.dart';
-+import 'package:employee_attendance/core/di/service_locator.dart';
- import 'package:employee_attendance/core/external_libs/presentable_widget_builder.dart';
-+import 'package:employee_attendance/core/static/svg_path.dart';
-+import 'package:employee_attendance/core/static/ui_const.dart';
- import 'package:employee_attendance/presentation/home/presenter/home_presenter.dart';
--import 'package:employee_attendance/presentation/home/widgets/double_back_to_exit_app.dart';
--import 'package:employee_attendance/presentation/home/widgets/mini_setting_drawer.dart';
--import 'package:flutter/material.dart';
--import 'package:get/get.dart';
-+import 'package:employee_attendance/presentation/home/widgets/attendance_time_widget.dart';
-+import 'package:employee_attendance/presentation/home/widgets/custom_appbar.dart';
-+import 'package:flutter_neumorphic_plus/flutter_neumorphic.dart';
-+import 'package:intl/intl.dart';
- 
- class HomePage extends StatelessWidget {
-   HomePage({super.key});
- 
--  final HomePresenter homePresenter = Get.put(HomePresenter());
-+  final HomePresenter homePresenter = locate<HomePresenter>();
- 
-   @override
-   Widget build(BuildContext context) {
-     final ThemeData theme = Theme.of(context);
--    return DoubleBackToExitApp(
--      child: PresentableWidgetBuilder(
--        presenter: homePresenter,
--        builder: () {
--          return PopScope(
--            child: Scaffold(
--              appBar: AppBar(
--                title: const Text(
--                  'Jobs BD',
-+    return PresentableWidgetBuilder(
-+      presenter: homePresenter,
-+      builder: () {
-+        return Scaffold(
-+          appBar: CustomAppBar(
-+            theme: theme,
-+            userName: 'Hassan',
-+            greetingMessage: 'Good Morning! Mark your attendance',
-+            profileImageUrl:
-+                'https://browvopetshop.com/wp-content/uploads/2024/05/Sunny-Leone-Biography.jpg',
-+          ),
-+          body: Center(
-+            child: Column(
-+              crossAxisAlignment: CrossAxisAlignment.center,
-+              mainAxisAlignment: MainAxisAlignment.center,
-+              children: [
-+                Text(
-+                  DateFormat('hh:mm:ss a')
-+                      .format(homePresenter.currentUiState.nowTimeIsIt),
-+                  style: theme.textTheme.bodyMedium!.copyWith(
-+                    fontSize: fiftyPx,
-+                  ),
-                 ),
--                actions: [
--                  TextButton(
--                    onPressed: () {},
--                    child: const Icon(
--                      Icons.notifications,
--                      color: Colors.white,
--                    ),
--                  )
--                ],
--              ),
--              drawer: MiniSettingsDrawer(theme: theme),
-+                gapH5,
-+                Text(
-+                  DateFormat('MMM dd, yyyy - EEEE').format(DateTime.now()),
-+                  style: theme.textTheme.bodyMedium!.copyWith(
-+                    fontSize: fourteenPx,
-+                    color: theme.textTheme.bodyMedium!.color!.withOpacity(0.6),
-+                  ),
-+                ),
-+                gapH50,
-+                NeumorphicButton(
-+                  onPressed: () {},
-+                  style: const NeumorphicStyle(
-+                    shape: NeumorphicShape.convex,
-+                    boxShape: NeumorphicBoxShape.circle(),
-+                    depth: 50,
-+                    intensity: 0.7,
-+                    lightSource: LightSource.topLeft,
-+                    surfaceIntensity: 0.5,
-+                    color: Colors.white,
-+                  ),
-+                  padding: EdgeInsets.all(fiftyPx),
-+                  child: Image.asset(
-+                    SvgPath.icTouch,
-+                    color: theme.primaryColor,
-+                    width: 80,
-+                  ),
-+                ),
-+                gapH75,
-+                Padding(
-+                  padding: EdgeInsets.symmetric(horizontal: tenPx),
-+                  child: Row(
-+                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
-+                    children: [
-+                      const AttendanceTimeWidget(
-+                        iconPath: SvgPath.icTimeIn,
-+                        time: '09:00 AM',
-+                        label: 'Check In',
-+                      ),
-+                      gapW10,
-+                      const AttendanceTimeWidget(
-+                        iconPath: SvgPath.icTimeOut,
-+                        label: 'Check Out',
-+                      ),
-+                      gapW10,
-+                      const AttendanceTimeWidget(
-+                        iconPath: SvgPath.icTotalHrs,
-+                        label: 'Total Hrs',
-+                      ),
-+                    ],
-+                  ),
-+                ),
-+              ],
-             ),
--          );
--        },
--      ),
-+          ),
-+        );
-+      },
-     );
-   }
- }
-diff --git a/lib/presentation/home/widgets/double_back_to_exit_app.dart b/lib/presentation/home/widgets/double_back_to_exit_app.dart
-deleted file mode 100644
-index 294405b..0000000
---- a/lib/presentation/home/widgets/double_back_to_exit_app.dart
-+++ /dev/null
-@@ -1,41 +0,0 @@
--import 'package:employee_attendance/core/utility/utility.dart';
--import 'package:flutter/material.dart';
--import 'package:flutter/services.dart';
--
--class DoubleBackToExitApp extends StatefulWidget {
--  final Widget child;
--
--  const DoubleBackToExitApp({super.key, required this.child});
--
--  @override
--  DoubleBackToExitAppState createState() => DoubleBackToExitAppState();
--}
--
--class DoubleBackToExitAppState extends State<DoubleBackToExitApp> {
--  DateTime _lastPressedAt = DateTime.now();
--
--  @override
--  Widget build(BuildContext context) {
--    return PopScope(
--      canPop: false,
--      onPopInvoked: (didPop) {
--        if (didPop) {
--          return;
--        }
--        _handlePop(context);
--      },
--      child: widget.child,
--    );
--  }
--
--  void _handlePop(BuildContext context) {
--    final now = DateTime.now();
--    if (now.difference(_lastPressedAt) > const Duration(seconds: 2)) {
--      _lastPressedAt = now;
--
--      showMessage(context: context, message: 'Press back again to exit');
--    } else {
--      SystemNavigator.pop();
--    }
--  }
--}
-diff --git a/lib/presentation/home/widgets/mini_setting_drawer.dart b/lib/presentation/home/widgets/mini_setting_drawer.dart
-deleted file mode 100644
-index 7901d78..0000000
---- a/lib/presentation/home/widgets/mini_setting_drawer.dart
-+++ /dev/null
-@@ -1,47 +0,0 @@
--import 'package:employee_attendance/core/static/svg_path.dart';
--import 'package:employee_attendance/presentation/common/privacy_policy.dart';
--import 'package:flutter/material.dart';
--
--class MiniSettingsDrawer extends StatelessWidget {
--  final ThemeData theme;
--
--  const MiniSettingsDrawer({required this.theme, super.key});
--
--  @override
--  Widget build(BuildContext context) {
--    return Drawer(
--      child: ListView(
--        padding: EdgeInsets.zero,
--        children: [
--          DrawerHeader(
--            decoration: BoxDecoration(
--              color: theme.primaryColor,
--            ),
--            child: Center(
--              child: Image.asset(SvgPath.imgAppLogo),
--            ),
--          ),
--          ListTile(
--            leading: const Icon(Icons.privacy_tip),
--            title: const Text('Privacy Policy'),
--            onTap: () {
--              Navigator.pop(context);
--              Navigator.push(
--                context,
--                MaterialPageRoute(
--                    builder: (context) => const PrivacyPolicyPage()),
--              );
--            },
--          ),
--          // ListTile(
--          //   leading: const Icon(Icons.info),
--          //   title: const Text('About Us'),
--          //   onTap: () {
--          //     Navigator.pop(context);
--          //   },
--          // ),
--        ],
--      ),
--    );
--  }
--}
-diff --git a/lib/presentation/screens/attendance_history_screen.dart b/lib/presentation/screens/attendance_history_screen.dart
-deleted file mode 100644
-index 1daa77a..0000000
---- a/lib/presentation/screens/attendance_history_screen.dart
-+++ /dev/null
-@@ -1,63 +0,0 @@
--import 'package:cloud_firestore/cloud_firestore.dart';
--import 'package:firebase_auth/firebase_auth.dart';
--import 'package:flutter/material.dart';
--import 'package:intl/intl.dart';
--
--class AttendanceHistoryScreen extends StatelessWidget {
--  const AttendanceHistoryScreen({super.key});
--
--  @override
--  Widget build(BuildContext context) {
--    return Scaffold(
--      appBar: AppBar(title: const Text('Attendance History')),
--      body: StreamBuilder<QuerySnapshot>(
--        stream: FirebaseFirestore.instance
--            .collection('attendance')
--            .where('userId', isEqualTo: FirebaseAuth.instance.currentUser?.uid)
--            .orderBy('checkInTime', descending: true)
--            .snapshots(),
--        builder: (context, snapshot) {
--          if (snapshot.hasError) {
--            return Center(child: Text('Error: ${snapshot.error}'));
--          }
--
--          if (snapshot.connectionState == ConnectionState.waiting) {
--            return const Center(child: CircularProgressIndicator());
--          }
--
--          final data = snapshot.data!.docs
--              .map((doc) => doc.data() as Map<String, dynamic>)
--              .toList();
--
--          return SingleChildScrollView(
--            scrollDirection: Axis.horizontal,
--            child: DataTable(
--              columns: const [
--                DataColumn(label: Text('Date')),
--                DataColumn(label: Text('Check-in Time')),
--                DataColumn(label: Text('Check-out Time')),
--                DataColumn(label: Text('Status')),
--              ],
--              rows: data.map((attendance) {
--                final checkInTime =
--                    (attendance['checkInTime'] as Timestamp).toDate();
--                final checkOutTime = attendance['checkOutTime'] != null
--                    ? (attendance['checkOutTime'] as Timestamp).toDate()
--                    : null;
--
--                return DataRow(cells: [
--                  DataCell(Text(DateFormat('yyyy-MM-dd').format(checkInTime))),
--                  DataCell(Text(DateFormat('HH:mm:ss').format(checkInTime))),
--                  DataCell(Text(checkOutTime != null
--                      ? DateFormat('HH:mm:ss').format(checkOutTime)
--                      : 'Not checked out')),
--                  DataCell(Text(attendance['isLate'] ? 'Late' : 'On Time')),
--                ]);
--              }).toList(),
--            ),
--          );
--        },
--      ),
--    );
--  }
--}
-diff --git a/lib/presentation/screens/attendance_screen.dart b/lib/presentation/screens/attendance_screen.dart
-deleted file mode 100644
-index c2ad345..0000000
---- a/lib/presentation/screens/attendance_screen.dart
-+++ /dev/null
-@@ -1,54 +0,0 @@
--import 'package:employee_attendance/controller/attendance_controller.dart';
--import 'package:firebase_auth/firebase_auth.dart';
--import 'package:flutter/material.dart';
--import 'package:get/get.dart';
--
--import 'attendance_history_screen.dart';
--
--class AttendanceScreen extends StatelessWidget {
--  final AttendanceController controller = Get.put(AttendanceController());
--
--  AttendanceScreen({super.key});
--
--  @override
--  Widget build(BuildContext context) {
--    return Scaffold(
--      appBar: AppBar(
--        title: const Text('Attendance'),
--        actions: [
--          IconButton(
--            icon: const Icon(Icons.exit_to_app),
--            onPressed: () => FirebaseAuth.instance.signOut(),
--          ),
--        ],
--      ),
--      body: Center(
--        child: Column(
--          mainAxisAlignment: MainAxisAlignment.center,
--          children: [
--            Obx(() => Text('Status: ${controller.status}',
--                style: Theme.of(context).textTheme.bodyMedium)),
--            const SizedBox(height: 20),
--            Obx(() => ElevatedButton(
--                  onPressed:
--                      controller.canCheckIn ? () => controller.checkIn() : null,
--                  child: const Text('Check In'),
--                )),
--            const SizedBox(height: 20),
--            Obx(() => ElevatedButton(
--                  onPressed: controller.canCheckOut
--                      ? () => controller.checkOut()
--                      : null,
--                  child: const Text('Check Out'),
--                )),
--            const SizedBox(height: 20),
--            ElevatedButton(
--              onPressed: () => Get.to(() => const AttendanceHistoryScreen()),
--              child: const Text('View History'),
--            ),
--          ],
--        ),
--      ),
--    );
--  }
--}
-diff --git a/lib/presentation/screens/login_screen.dart b/lib/presentation/screens/login_screen.dart
-deleted file mode 100644
-index 21cb4cc..0000000
---- a/lib/presentation/screens/login_screen.dart
-+++ /dev/null
-@@ -1,39 +0,0 @@
--import 'package:employee_attendance/controller/auth_controller.dart';
--import 'package:flutter/material.dart';
--import 'package:get/get.dart';
--
--class LoginScreen extends StatelessWidget {
--  final AuthController authController = Get.put(AuthController());
--
--  LoginScreen({super.key});
--
--  @override
--  Widget build(BuildContext context) {
--    return Scaffold(
--      appBar: AppBar(title: const Text('Login')),
--      body: Padding(
--        padding: const EdgeInsets.all(16.0),
--        child: Column(
--          mainAxisAlignment: MainAxisAlignment.center,
--          children: [
--            TextField(
--              controller: authController.emailController,
--              decoration: const InputDecoration(labelText: 'Email'),
--              keyboardType: TextInputType.emailAddress,
--            ),
--            TextField(
--              controller: authController.passwordController,
--              decoration: const InputDecoration(labelText: 'Password'),
--              obscureText: true,
--            ),
--            const SizedBox(height: 20),
--            ElevatedButton(
--              onPressed: () => authController.login(),
--              child: const Text('Login'),
--            ),
--          ],
--        ),
--      ),
--    );
--  }
--}
-diff --git a/lib/presentation/widgets/auth_wrapper.dart b/lib/presentation/widgets/auth_wrapper.dart
-deleted file mode 100644
-index b847992..0000000
---- a/lib/presentation/widgets/auth_wrapper.dart
-+++ /dev/null
-@@ -1,25 +0,0 @@
--import 'package:firebase_auth/firebase_auth.dart';
--import 'package:flutter/material.dart';
--import '../screens/login_screen.dart';
--import '../screens/attendance_screen.dart';
--
--class AuthWrapper extends StatelessWidget {
--  const AuthWrapper({super.key});
--
--  @override
--  Widget build(BuildContext context) {
--    return StreamBuilder<User?>(
--      stream: FirebaseAuth.instance.authStateChanges(),
--      builder: (context, snapshot) {
--        if (snapshot.connectionState == ConnectionState.active) {
--          User? user = snapshot.data;
--          if (user == null) {
--            return LoginScreen();
--          }
--          return AttendanceScreen();
--        }
--        return const Scaffold(body: Center(child: CircularProgressIndicator()));
--      },
--    );
--  }
--}
-diff --git a/pubspec.lock b/pubspec.lock
-index 6ecc99d..820b921 100644
---- a/pubspec.lock
-+++ b/pubspec.lock
-@@ -33,6 +33,14 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "2.11.0"
-+  awesome_bottom_bar:
-+    dependency: "direct main"
-+    description:
-+      name: awesome_bottom_bar
-+      sha256: dd42e6767ae22cf5eb47695991e7a3f964ccba3b403a93837c20eb4f74e4ad0f
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "1.2.4"
-   boolean_selector:
-     dependency: transitive
-     description:
-@@ -206,6 +214,14 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "4.0.0"
-+  flutter_neumorphic_plus:
-+    dependency: "direct main"
-+    description:
-+      name: flutter_neumorphic_plus
-+      sha256: "8fa0a1ff1c025e2d61850798d244e61c37cd4717bd340eadf4c9baa00b24353f"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "3.4.0"
-   flutter_test:
-     dependency: "direct dev"
-     description: flutter
-@@ -240,6 +256,14 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "4.6.6"
-+  get_it:
-+    dependency: "direct main"
-+    description:
-+      name: get_it
-+      sha256: d85128a5dae4ea777324730dc65edd9c9f43155c109d5cc0a69cab74139fbac1
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "7.7.0"
-   http_parser:
-     dependency: transitive
-     description:
-diff --git a/pubspec.yaml b/pubspec.yaml
-index 788d89b..7ce1139 100644
---- a/pubspec.yaml
-+++ b/pubspec.yaml
-@@ -47,6 +47,9 @@ dependencies:
-   fpdart: ^1.1.0
-   fluttertoast: ^8.2.8
-   permission_handler: ^11.3.1
-+  flutter_neumorphic_plus: ^3.4.0
-+  awesome_bottom_bar: ^1.2.4
-+  get_it: ^7.7.0
- 
- dev_dependencies:
-   flutter_test:
-@@ -72,6 +75,7 @@ flutter:
-   # To add assets to your application, add an assets section, like this:
-   assets:
-     - assets/png/
-+    - assets/inter/
-   # An image asset can refer to one or more resolution-specific "variants", see
-   # https://flutter.dev/assets-and-images/#resolution-aware
- 
-@@ -83,17 +87,13 @@ flutter:
-   # "family" key with the font family name, and a "fonts" key with a
-   # list giving the asset and other descriptors for the font. For
-   # example:
--  # fonts:
--  #   - family: Schyler
--  #     fonts:
--  #       - asset: fonts/Schyler-Regular.ttf
--  #       - asset: fonts/Schyler-Italic.ttf
--  #         style: italic
--  #   - family: Trajan Pro
--  #     fonts:
--  #       - asset: fonts/TrajanPro.ttf
--  #       - asset: fonts/TrajanPro_Bold.ttf
--  #         weight: 700
-+  fonts:
-+    - family: Inter
-+      fonts:
-+        - asset: assets/inter/Inter_28pt-Bold.ttf
-+        - asset: assets/inter/Inter_28pt-Regular.ttf
-+        - asset: assets/inter/Inter_28pt-SemiBold.ttf
-+        - asset: assets/inter/Inter_28pt-Medium.ttf
-   #
-   # For details regarding fonts from package dependencies,
-   # see https://flutter.dev/custom-fonts/#from-packages
-
-================
-
-here is my changes...give me git push msg and description of changes with using of proper emoticons...dont give any long boring texts, "STRICTLY i dont need any explanations"
diff --git a/lib/presentation/history/ui/history_page.dart b/lib/presentation/history/ui/history_page.dart
index 0fd475a..7fa3dfb 100644
--- a/lib/presentation/history/ui/history_page.dart
+++ b/lib/presentation/history/ui/history_page.dart
@@ -7,6 +7,7 @@ class HistoryPage extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
+    final ThemeData theme = Theme.of(context);
     return Scaffold(
       appBar: AppBar(
         title: const Text('Attendance History'),
@@ -15,7 +16,7 @@ class HistoryPage extends StatelessWidget {
       body: ListView.builder(
         padding: padding15,
         itemCount: 10,
-        itemBuilder: (_, index) => const AttendanceItem(),
+        itemBuilder: (_, index) => AttendanceItem(theme: theme),
       ),
     );
   }
diff --git a/lib/presentation/history/widgets/attendance_item.dart b/lib/presentation/history/widgets/attendance_item.dart
index 13eb96e..b28ab72 100644
--- a/lib/presentation/history/widgets/attendance_item.dart
+++ b/lib/presentation/history/widgets/attendance_item.dart
@@ -1,17 +1,23 @@
 import 'package:employee_attendance/core/config/employee_attendance_screen.dart';
 import 'package:employee_attendance/core/static/ui_const.dart';
+import 'package:employee_attendance/presentation/history/widgets/attendance_details.dart';
 import 'package:employee_attendance/presentation/history/widgets/show_date_container.dart';
 import 'package:flutter/material.dart';
 
 class AttendanceItem extends StatelessWidget {
-  const AttendanceItem({super.key});
+  const AttendanceItem({
+    super.key,
+    required this.theme,
+  });
+
+  final ThemeData theme;
 
   @override
   Widget build(BuildContext context) {
     return Padding(
       padding: EdgeInsets.only(bottom: tenPx),
       child: Container(
-        padding: padding15,
+        padding: padding6,
         decoration: BoxDecoration(
           color: Colors.white,
           borderRadius: radius10,
@@ -19,35 +25,8 @@ class AttendanceItem extends StatelessWidget {
         child: Row(
           children: [
             const ShowDateContainer(),
-            // Add more widgets here for additional attendance information
-            Column(
-              crossAxisAlignment: CrossAxisAlignment.start,
-              children: [
-                Text(
-                  '09:00 AM',
-                  style: Theme.of(context).textTheme.bodyMedium!.copyWith(
-                        fontSize: sixteenPx,
-                        color: Theme.of(context)
-                            .textTheme
-                            .bodyMedium!
-                            .color!
-                            .withOpacity(0.6),
-                      ),
-                ),
-                Text(
-                  'Check In',
-                  style: Theme.of(context).textTheme.bodyMedium!.copyWith(
-                        fontSize: sixteenPx,
-                        color: Theme.of(context)
-                            .textTheme
-                            .bodyMedium!
-                            .color!
-                            .withOpacity(0.6),
-                      ),
-                ),
-                const Divider()
-              ],
-            ),
+            gapW8,
+            AttendanceDetails(theme: theme)
           ],
         ),
       ),
diff --git a/lib/presentation/home/widgets/custom_appbar.dart b/lib/presentation/home/widgets/custom_appbar.dart
index 7872b25..7404572 100644
--- a/lib/presentation/home/widgets/custom_appbar.dart
+++ b/lib/presentation/home/widgets/custom_appbar.dart
@@ -1,3 +1,4 @@
+import 'package:cached_network_image/cached_network_image.dart';
 import 'package:employee_attendance/core/config/employee_attendance_screen.dart';
 import 'package:employee_attendance/core/static/ui_const.dart';
 import 'package:flutter/material.dart';
@@ -41,9 +42,15 @@ class CustomAppBar extends StatelessWidget implements PreferredSizeWidget {
         ],
       ),
       actions: [
-        CircleAvatar(
-          radius: twentyFivePx,
-          backgroundImage: NetworkImage(profileImageUrl),
+        ClipRRect(
+          borderRadius: radius50,
+          child: CachedNetworkImage(
+            imageUrl: profileImageUrl,
+            placeholder: (context, url) =>
+                const Icon(Icons.image, color: Colors.grey),
+            errorWidget: (context, url, error) => const Icon(Icons.error),
+            width: EmployeeAttendanceScreen.width * 0.13,
+          ),
         ),
         gapW15
       ],
diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
index 358ea08..c72db21 100644
--- a/macos/Flutter/GeneratedPluginRegistrant.swift
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift
@@ -10,6 +10,8 @@ import connectivity_plus
 import firebase_auth
 import firebase_core
 import network_info_plus
+import path_provider_foundation
+import sqflite
 
 func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
   FLTFirebaseFirestorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseFirestorePlugin"))
@@ -17,4 +19,6 @@ func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
   FLTFirebaseAuthPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseAuthPlugin"))
   FLTFirebaseCorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseCorePlugin"))
   NetworkInfoPlusPlugin.register(with: registry.registrar(forPlugin: "NetworkInfoPlusPlugin"))
+  PathProviderPlugin.register(with: registry.registrar(forPlugin: "PathProviderPlugin"))
+  SqflitePlugin.register(with: registry.registrar(forPlugin: "SqflitePlugin"))
 }
diff --git a/pubspec.lock b/pubspec.lock
index 820b921..6723fcd 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -5,10 +5,10 @@ packages:
     dependency: transitive
     description:
       name: _flutterfire_internals
-      sha256: "37a42d06068e2fe3deddb2da079a8c4d105f241225ba27b7122b37e9865fd8f7"
+      sha256: f5628cd9c92ed11083f425fd1f8f1bc60ecdda458c81d73b143aeda036c35fe7
       url: "https://pub.dev"
     source: hosted
-    version: "1.3.35"
+    version: "1.3.16"
   ansicolor:
     dependency: transitive
     description:
@@ -49,6 +49,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.1.1"
+  cached_network_image:
+    dependency: "direct main"
+    description:
+      name: cached_network_image
+      sha256: "7c1183e361e5c8b0a0f21a28401eecdbde252441106a9816400dd4c2b2424916"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.4.1"
+  cached_network_image_platform_interface:
+    dependency: transitive
+    description:
+      name: cached_network_image_platform_interface
+      sha256: "35814b016e37fbdc91f7ae18c8caf49ba5c88501813f73ce8a07027a395e2829"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.1.1"
+  cached_network_image_web:
+    dependency: transitive
+    description:
+      name: cached_network_image_web
+      sha256: "980842f4e8e2535b8dbd3d5ca0b1f0ba66bf61d14cc3a17a9b4788a3685ba062"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.1"
   characters:
     dependency: transitive
     description:
@@ -69,26 +93,26 @@ packages:
     dependency: "direct main"
     description:
       name: cloud_firestore
-      sha256: a0f161b92610e078b4962d7e6ebeb66dc9cce0ada3514aeee442f68165d78185
+      sha256: "8bfbb5a2edbc6052452326d60de0113fea2bcbf081d34a3f8e45c8b38307b31c"
       url: "https://pub.dev"
     source: hosted
-    version: "4.17.5"
+    version: "4.14.0"
   cloud_firestore_platform_interface:
     dependency: transitive
     description:
       name: cloud_firestore_platform_interface
-      sha256: "6a55b319f8d33c307396b9104512e8130a61904528ab7bd8b5402678fca54b81"
+      sha256: "73ff438fe46028f0e19f55da18b6ddc6906ab750562cd7d9ffab77ff8c0c4307"
       url: "https://pub.dev"
     source: hosted
-    version: "6.2.5"
+    version: "6.1.0"
   cloud_firestore_web:
     dependency: transitive
     description:
       name: cloud_firestore_web
-      sha256: "89dfa1304d3da48b3039abbb2865e3d30896ef858e569a16804a99f4362283a9"
+      sha256: "232e45e95970d3a6baab8f50f9c3a6e2838d145d9d91ec9a7392837c44296397"
       url: "https://pub.dev"
     source: hosted
-    version: "3.12.5"
+    version: "3.9.0"
   collection:
     dependency: transitive
     description:
@@ -113,6 +137,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.0.1"
+  crypto:
+    dependency: transitive
+    description:
+      name: crypto
+      sha256: ec30d999af904f33454ba22ed9a86162b35e52b44ac4807d1d93c288041d7d27
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.5"
   cupertino_icons:
     dependency: "direct main"
     description:
@@ -153,38 +185,46 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.1.3"
+  file:
+    dependency: transitive
+    description:
+      name: file
+      sha256: "5fc22d7c25582e38ad9a8515372cd9a93834027aacf1801cf01164dac0ffa08c"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.0"
   firebase_auth:
     dependency: "direct main"
     description:
       name: firebase_auth
-      sha256: cfc2d970829202eca09e2896f0a5aa7c87302817ecc0bdfa954f026046bf10ba
+      sha256: "279b2773ff61afd9763202cb5582e2b995ee57419d826b9af6517302a59b672f"
       url: "https://pub.dev"
     source: hosted
-    version: "4.20.0"
+    version: "4.16.0"
   firebase_auth_platform_interface:
     dependency: transitive
     description:
       name: firebase_auth_platform_interface
-      sha256: a0270e1db3b2098a14cb2a2342b3cd2e7e458e0c391b1f64f6f78b14296ec093
+      sha256: "3c9cfaccb7549492edf5b0c67c6dd1c6727c7830891aa6727f2fb225f0226626"
       url: "https://pub.dev"
     source: hosted
-    version: "7.3.0"
+    version: "7.0.9"
   firebase_auth_web:
     dependency: transitive
     description:
       name: firebase_auth_web
-      sha256: "64e067e763c6378b7e774e872f0f59f6812885e43020e25cde08f42e9459837b"
+      sha256: c7b1379ccef7abf4b6816eede67a868c44142198e42350f51c01d8fc03f95a7d
       url: "https://pub.dev"
     source: hosted
-    version: "5.12.0"
+    version: "5.8.13"
   firebase_core:
     dependency: "direct main"
     description:
       name: firebase_core
-      sha256: "26de145bb9688a90962faec6f838247377b0b0d32cc0abecd9a4e43525fc856c"
+      sha256: "96607c0e829a581c2a483c658f04e8b159964c3bae2730f73297070bc85d40bb"
       url: "https://pub.dev"
     source: hosted
-    version: "2.32.0"
+    version: "2.24.2"
   firebase_core_platform_interface:
     dependency: transitive
     description:
@@ -197,15 +237,31 @@ packages:
     dependency: transitive
     description:
       name: firebase_core_web
-      sha256: e8d1e22de72cb21cdcfc5eed7acddab3e99cd83f3b317f54f7a96c32f25fd11e
+      sha256: d585bdf3c656c3f7821ba1bd44da5f13365d22fcecaf5eb75c4295246aaa83c0
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.10.0"
+  fixnum:
+    dependency: transitive
+    description:
+      name: fixnum
+      sha256: "25517a4deb0c03aa0f32fd12db525856438902d9c16536311e76cdc57b31d7d1"
       url: "https://pub.dev"
     source: hosted
-    version: "2.17.4"
+    version: "1.1.0"
   flutter:
     dependency: "direct main"
     description: flutter
     source: sdk
     version: "0.0.0"
+  flutter_cache_manager:
+    dependency: transitive
+    description:
+      name: flutter_cache_manager
+      sha256: "400b6592f16a4409a7f2bb929a9a7e38c72cceb8ffb99ee57bbf2cb2cecf8386"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.4.1"
   flutter_lints:
     dependency: "direct dev"
     description:
@@ -264,6 +320,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "7.7.0"
+  http:
+    dependency: transitive
+    description:
+      name: http
+      sha256: b9c29a161230ee03d3ccf545097fccd9b87a5264228c5d348202e0f0c28f9010
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.2.2"
   http_parser:
     dependency: transitive
     description:
@@ -280,6 +344,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.19.0"
+  js:
+    dependency: transitive
+    description:
+      name: js
+      sha256: f2c445dce49627136094980615a031419f7f3eb393237e4ecd97ac15dea343f3
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.6.7"
   leak_tracker:
     dependency: transitive
     description:
@@ -360,6 +432,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.5.0"
+  octo_image:
+    dependency: transitive
+    description:
+      name: octo_image
+      sha256: "34faa6639a78c7e3cbe79be6f9f96535867e879748ade7d17c9b1ae7536293bd"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.0"
   path:
     dependency: transitive
     description:
@@ -368,6 +448,54 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.9.0"
+  path_provider:
+    dependency: transitive
+    description:
+      name: path_provider
+      sha256: fec0d61223fba3154d87759e3cc27fe2c8dc498f6386c6d6fc80d1afdd1bf378
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.4"
+  path_provider_android:
+    dependency: transitive
+    description:
+      name: path_provider_android
+      sha256: "6f01f8e37ec30b07bc424b4deabac37cacb1bc7e2e515ad74486039918a37eb7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.10"
+  path_provider_foundation:
+    dependency: transitive
+    description:
+      name: path_provider_foundation
+      sha256: f234384a3fdd67f989b4d54a5d73ca2a6c422fa55ae694381ae0f4375cd1ea16
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.0"
+  path_provider_linux:
+    dependency: transitive
+    description:
+      name: path_provider_linux
+      sha256: f7a1fe3a634fe7734c8d3f2766ad746ae2a2884abe22e241a8b301bf5cac3279
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.1"
+  path_provider_platform_interface:
+    dependency: transitive
+    description:
+      name: path_provider_platform_interface
+      sha256: "88f5779f72ba699763fa3a3b06aa4bf6de76c8e5de842cf6f29e2e06476c2334"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.2"
+  path_provider_windows:
+    dependency: transitive
+    description:
+      name: path_provider_windows
+      sha256: bd6f00dbd873bfb70d0761682da2b3a2c2fccc2b9e84c495821639601d81afe7
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.0"
   permission_handler:
     dependency: "direct main"
     description:
@@ -396,10 +524,10 @@ packages:
     dependency: transitive
     description:
       name: permission_handler_html
-      sha256: "6cac773d389e045a8d4f85418d07ad58ef9e42a56e063629ce14c4c26344de24"
+      sha256: d220eb8476b466d58b161e10b3001d93999010a26228a3fb89c4280db1249546
       url: "https://pub.dev"
     source: hosted
-    version: "0.1.2"
+    version: "0.1.3+1"
   permission_handler_platform_interface:
     dependency: transitive
     description:
@@ -424,6 +552,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "6.0.2"
+  platform:
+    dependency: transitive
+    description:
+      name: platform
+      sha256: "9b71283fc13df574056616011fb138fd3b793ea47cc509c189a6c3fa5f8a1a65"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.5"
   plugin_platform_interface:
     dependency: transitive
     description:
@@ -440,6 +576,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "3.3.1"
+  rxdart:
+    dependency: transitive
+    description:
+      name: rxdart
+      sha256: "5c3004a4a8dbb94bd4bf5412a4def4acdaa12e12f269737a5751369e12d1a962"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.28.0"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -453,6 +597,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.10.0"
+  sprintf:
+    dependency: transitive
+    description:
+      name: sprintf
+      sha256: "1fc9ffe69d4df602376b52949af107d8f5703b77cda567c4d7d86a0693120f23"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.0"
+  sqflite:
+    dependency: transitive
+    description:
+      name: sqflite
+      sha256: a43e5a27235518c03ca238e7b4732cf35eabe863a369ceba6cbefa537a66f16d
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.3+1"
+  sqflite_common:
+    dependency: transitive
+    description:
+      name: sqflite_common
+      sha256: c5e5b2a142a893a752cb36ae5888680248686725a54afceff31f9a3a76bc53c2
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.4+1"
   stack_trace:
     dependency: transitive
     description:
@@ -477,6 +645,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.2.0"
+  synchronized:
+    dependency: transitive
+    description:
+      name: synchronized
+      sha256: a824e842b8a054f91a728b783c177c1e4731f6b124f9192468457a8913371255
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.2.0"
   talker_logger:
     dependency: "direct main"
     description:
@@ -509,6 +685,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.3.2"
+  uuid:
+    dependency: transitive
+    description:
+      name: uuid
+      sha256: "83d37c7ad7aaf9aa8e275490669535c8080377cfa7a7004c24dfac53afffaa90"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.4.2"
   vector_math:
     dependency: transitive
     description:
@@ -529,10 +713,10 @@ packages:
     dependency: transitive
     description:
       name: web
-      sha256: "97da13628db363c635202ad97068d47c5b8aa555808e7a9411963c533b449b27"
+      sha256: d43c1d6b787bf0afad444700ae7f4db8827f701bc61c255ac8d328c6f4d52062
       url: "https://pub.dev"
     source: hosted
-    version: "0.5.1"
+    version: "1.0.0"
   win32:
     dependency: transitive
     description:
@@ -541,6 +725,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "5.5.4"
+  xdg_directories:
+    dependency: transitive
+    description:
+      name: xdg_directories
+      sha256: faea9dee56b520b55a566385b84f2e8de55e7496104adada9962e0bd11bcff1d
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.4"
   xml:
     dependency: transitive
     description:
@@ -550,5 +742,5 @@ packages:
     source: hosted
     version: "6.5.0"
 sdks:
-  dart: ">=3.4.3 <4.0.0"
-  flutter: ">=3.18.0-18.0.pre.54"
+  dart: ">=3.5.0 <4.0.0"
+  flutter: ">=3.22.0"
diff --git a/pubspec.yaml b/pubspec.yaml
index 7ce1139..fe0ece5 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -50,6 +50,7 @@ dependencies:
   flutter_neumorphic_plus: ^3.4.0
   awesome_bottom_bar: ^1.2.4
   get_it: ^7.7.0
+  cached_network_image: ^3.4.1
 
 dev_dependencies:
   flutter_test:

================

here is my changes...give me git push msg and description of changes with using of proper emoticons...dont give any long boring texts, "STRICTLY i dont need any explanations"
